AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Type: String
    AllowedValues: [dev, prod]
    Description: The deployment environment (dev or prod)
  Email1:
    Type: String
    Description: First email address for SNS subscription
  Email2:
    Type: String
    Description: Second email address for SNS subscription

Resources:
  # S3 Bucket
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'my-eda-app-bucket-${Environment}'

  # SNS Topic
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub 'my-eda-app-topic-${Environment}'

  # SNS Subscriptions
  Subscription1:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      Endpoint: !Ref Email1
      TopicArn: !Ref SNSTopic

  Subscription2:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      Endpoint: !Ref Email2
      TopicArn: !Ref SNSTopic

  # Lambda Function
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.example.eventDA-app.LambdaHandler::handleRequest
      Runtime: java21
      CodeUri: ./eventDA-app
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref SNSTopic
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref S3Bucket
            Events: s3:ObjectCreated:*
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'sns:Publish'
              Resource: !Ref SNSTopic